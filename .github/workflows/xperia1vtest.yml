- name: Package with AnyKernel3
        run: |
          cp bootimgs/Image AnyKernel3/
          cp bootimgs/Image.gz AnyKernel3/
          cp bootimgs/Image.lz4 AnyKernel3/
          # Copying the ramdisk to AnyKernel3 directory
          curl -LO https://mirrorbits.lineageos.org/full/pdx234/20250914/init_boot.img
          mkdir init_boot_unpacked
          cd init_boot_unpacked
          python3 "$UNPACK_BOOTIMG" --boot_img ../init_boot.img
          mkdir -p ramdisk_contents
          cd ramdisk_contents
          cat ../ramdisk | cpio -idmv
          cp -r * ../../../AnyKernel3/ramdisk/
          # End of ramdisk copy
          mkdir -p AnyKernel3/dtbs
          find kernel/arch/arm64/boot/dts -name "*.dtb" -exec cp {} AnyKernel3/dtbs/ \; 2>/dev/null || true
          if [ "${{ inputs.build_modules }}" = "true" ] && [ -d "modules_out" ]; then
            echo "Copying kernel modules to AnyKernel3..."
            mkdir -p AnyKernel3/modules/system/lib/modules
            find modules_out -name "*.ko" -exec cp {} AnyKernel3/modules/system/lib/modules/ \;
          fi
          cat > AnyKernel3/anykernel.sh << 'EOF'
          # AnyKernel3 Ramdisk Mod Script
          # osm0sis @ xda-developers
          properties() { '
          kernel.string=Sony SM8550 KernelSU + SUSFS Kernel (${{ inputs.android_version }})
          do.devicecheck=1
          do.modules=${{ inputs.build_modules && '1' || '0' }}
          do.systemless=1
          do.cleanup=1
          do.cleanuponabort=0
          device.name1=pdx234
          device.name2=pdx237
          device.name3=yodo
          device.name4=sm8550
          supported.versions=13,14,15
          supported.patchlevels=
          '; }
          # Shell variables
          block=/dev/block/bootdevice/by-name/boot;
          is_slot_device=1;
          ramdisk_compression=auto;
          patch_vbmeta_flag=auto;
          # Import functions/variables and setup patching
          . tools/ak3-core.sh;
          # AnyKernel install
          dump_boot;
          # Install modules if present
          if [ "${{ inputs.build_modules }}" = "true" ] && [ -d "$home/modules" ]; then
            ui_print "- Installing kernel modules...";
            mount -o rw,remount /system;
            cp -rf $home/modules/* /;
            mount -o ro,remount /system;
          fi;
          write_boot;
          EOF
          cd AnyKernel3
          ZIP_NAME="${{ inputs.android_version }}-${{ env.KERNEL_VERSION }}.${{ env.KERNEL_SUBLEVEL }}-${{ env.ANDROID_SECURITY_PATCH }}-AnyKernel3.zip"
          zip -r "../$ZIP_NAME" ./* -x Image.gz Image.lz4
          rm -f Image
          ZIP_NAME_GZ="${{ inputs.android_version }}-${{ env.KERNEL_VERSION }}.${{ env.KERNEL_SUBLEVEL }}-${{ env.ANDROID_SECURITY_PATCH }}-AnyKernel3-gz.zip"
          zip -r "../$ZIP_NAME_GZ" ./* -x Image Image.lz4
          rm -f Image.gz
          ZIP_NAME_LZ4="${{ inputs.android_version }}-${{ env.KERNEL_VERSION }}.${{ env.KERNEL_SUBLEVEL }}-${{ env.ANDROID_SECURITY_PATCH }}-AnyKernel3-lz4.zip"
          zip -r "../$ZIP_NAME_LZ4" ./* -x Image Image.gz
